stages:
  - test
  - build
  - push

.setup_python_env: &setup_python_env
  before_script:
  - cd backend
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -r requirements.txt -r test-requirements.txt

lint:
  stage: test
  image: python:3.8
  <<: *setup_python_env
  script:
    - pip install flake8
    - flake8 .
  cache:
    paths:
      - backend/venv/

test:
  stage: test
  image: python:3.8
  services:
    - postgres:12.2-alpine
  variables:
    POSTGRES_DB: garden
    POSTGRES_HOST_AUTH_METHOD: trust
    POSTGRES_PASSWORD: ""
    POSTGRES_USER: postgres
  <<: *setup_python_env
  script:
    - pytest -v --cov=model_garden --cov-report=term-missing --no-cov-on-fail tests
  cache:
    paths:
      - backend/venv/

backend:
  stage: build
  image: docker
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://localhost:2375/
    REPOSITORY_URL: 363712795748.dkr.ecr.eu-central-1.amazonaws.com/model_garden_backend
  before_script:
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - cd backend
  script:
    - $(aws ecr get-login --no-include-email --region eu-central-1)
    - echo $CI_COMMIT_TAG
    - docker build --network host -t $REPOSITORY_URL:latest .
    - docker tag $REPOSITORY_URL:latest $REPOSITORY_URL:$CI_COMMIT_TAG
    - docker images
    - docker push $REPOSITORY_URL:latest
    - docker push $REPOSITORY_URL:$CI_COMMIT_TAG
    - aws ecs update-service --force-new-deployment --cluster model-garden --service backend
    - aws ecs list-tasks --cluster model-garden --service backend | jq -r ".taskArns[]" | awk '{print "aws ecs stop-task --cluster model-garden --task \""$0"\""}' | sh
  only:
    - tags

frontend:
  stage: build
  image: docker
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://localhost:2375/
    REPOSITORY_URL: 363712795748.dkr.ecr.eu-central-1.amazonaws.com/model_garden_frontend
  before_script:
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - cd frontend
  script:
    - $(aws ecr get-login --no-include-email --region eu-central-1)
    - echo $CI_COMMIT_TAG
    - docker build --network host -t $REPOSITORY_URL:latest .
    - docker tag $REPOSITORY_URL:latest $REPOSITORY_URL:$CI_COMMIT_TAG
    - docker images
    - docker push $REPOSITORY_URL:latest
    - docker push $REPOSITORY_URL:$CI_COMMIT_TAG
    - aws ecs update-service --force-new-deployment --cluster model-garden --service frontend
    - aws ecs list-tasks --cluster model-garden --service frontend | jq -r ".taskArns[]" | awk '{print "aws ecs stop-task --cluster model-garden --task \""$0"\""}' | sh
  only:
    - tags
